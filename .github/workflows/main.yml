# This is a basic workflow to help you get started with Actions

name: Build release

# Controls when the action will run. 
on:
  push:
    tags:
      - "v*"
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Build:
    runs-on: ubuntu-20.04

    env:
      COMMIT_REF: $(git rev-parse --short "$GITHUB_SHA")

    steps:
      - uses: actions/checkout@v2

      - name: Get the version
        id: get_branch
        run: echo ::set-output name=BRANCH::${GITHUB_REF/refs\/heads\//}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Run Bicep build
        uses: aliencube/bicep-build-actions@v0.1
        with:
          files: infrasetup/main.bicep

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
            
      - name: Create Resource Group
        run: |
          az group create -g "featherservicetest-rg" -l "West US"
          
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: azure/arm-deploy@v1
        id: deploy
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: featherservicetest-rg
          template: ./infrasetup/main.json
          deploymentMode: Incremental
            
      - name: Build image with ACR
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az acr build --registry ${{ steps.deploy.outputs.registryNameOutput }} --image featherservicetest_release:${{ steps.get_version.outputs.VERSION }} ./src/BasicService/
            
#TODO: sure docker in this action and push to ACR
#      - name: Build Docker
#        run: docker build -t testimagecicd ./src/BasicService/. 
        
#      - name: Login to ACR
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
#      - name: Azure CLI script
#        uses: azure/CLI@v1
#        with:
#          azcliversion: 2.0.72
#          inlineScript: |
#            az acr login --name clarkezonecontainerregistry2
            
        
